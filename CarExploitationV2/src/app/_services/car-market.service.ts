import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { CarMarket } from 'app/_models/carMarket';
import { environment } from 'environments/environment';
import { Observable, of } from 'rxjs';
import { map } from 'rxjs/internal/operators/map';
import { MembersService } from './members.service';

@Injectable({
  providedIn: 'root'
})
export class CarMarketService {
  baseUrl = environment.apiUrl;
  carMarkets: CarMarket[] = [];


  constructor(private http: HttpClient, private memberService: MembersService) { }

  getAll()
  {
    if(this.carMarkets.length > 0) return of(this.carMarkets)  
    return this.http.get<CarMarket[]>(this.baseUrl + 'carmarket').pipe(
      map(carMarkets => {
        this.carMarkets = carMarkets;
        console.log("Get car markets");
        return carMarkets;        
      })
    ) 
  }
  add(model: CarMarket)
  {
    return this.http.post(this.baseUrl + 'carsmarket', model)
    .subscribe(data => 
        { 
          if(data)
          {
            // this.cars.push(data)
          }
        })   
  }
  update(model: CarMarket)
  {
    return this.http.put(this.baseUrl + 'carMarket/' + model.id, model)
    .subscribe(data => 
      { 
        if(data)
        {
          // this.cars.push(data)
        }
      })    
  }
  delete(id: Number):Observable<number>
  {
    return this.http.delete<number>(this.baseUrl + "cars/" + id);
  }
}
