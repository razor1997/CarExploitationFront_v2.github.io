import { HttpClient, HttpHeaders } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { environment } from 'environments/environment';
import { Observable, of } from 'rxjs';
import { catchError, map } from 'rxjs/operators';
import { Car } from '../_models/car';
import { Member } from '../_models/member';
import { User } from '../_models/user';
import { MembersService } from './members.service';

@Injectable({
  providedIn: 'root'
})
export class CarsService {
  baseUrl = environment.apiUrl;
  cars: Car[] = [];
  carsUser: Car[] = [];
  member: Member;
  user: User;
  httpOptions = {
    headers: new HttpHeaders({
      'Content-Type': 'application/json'
    })
  };
  constructor(private http: HttpClient, private memberService: MembersService) { 
  }

  getAll()
  {
    console.log("Get user cars");
    if(this.cars.length > 0) return of(this.cars)
    return this.http.get<Car[]>(this.baseUrl + 'cars').pipe(
      map(cars => {
        this.cars = cars;
        console.log("Get cars");
        return cars;        
      })
    )
  }
  get(username: String)
  {
    console.log("Get user cars");
    userId: Number;
    this.memberService.getMember(username).subscribe(member => {
      this.member = member;
    })
    // if(this.member != undefined) 
    {
      const userId = 1;//this.member.id;
      return this.http.get<Car[]>(this.baseUrl + 'usercars/AppUserId?IdUser=' + userId).pipe(
        map(carsUser => {
          this.carsUser = carsUser;  
          return this.carsUser;
        })
      )
    }
  }
  add(model: Car)
  {  
    return this.http.post(this.baseUrl + 'cars', model)
    .subscribe(data => 
        { 
          if(data)
          {
            // this.cars.push(data)
          }
        })
  }
  update(model: Car)
  {
    return this.http.put(this.baseUrl + 'cars/' + model.id, model)
    .subscribe(data => 
      { 
        if(data)
        {
          // this.cars.push(data)
        }
      })
  }
  delete(id: Number):Observable<number>
  {
    return this.http.delete<number>(this.baseUrl + "cars/" + id);
  }
}
