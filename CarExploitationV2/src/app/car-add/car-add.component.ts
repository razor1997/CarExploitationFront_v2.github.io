import { Component, Inject } from '@angular/core';
import { FormControl, FormGroup, Validators } from '@angular/forms';
import { MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';
import { EngineType } from 'app/_enums/cars-data';
import { Car } from 'app/_models/car';
import { CarsService } from 'app/_services/cars.service';
import { MembersService } from 'app/_services/members.service';
import { __values } from 'tslib';

interface Engine {
  value: number;
  type: string;
}

@Component({
  selector: 'app-car-add',
  templateUrl: './car-add.component.html',
  styleUrls: ['./car-add.component.css']
})

export class CarAddComponent {
  fileName = '';
  carId: Number;
  formData = new FormData();

  carForm = new FormGroup({
    mark: new FormControl(this.data.mark,[ Validators.required]),
    model: new FormControl(this.data.model,[Validators.required]),
    yearProduction: new FormControl(this.data.yearProduction,[Validators.required]),
    capacity: new FormControl(this.data.capacity,[Validators.required]),
    engineType: new FormControl(this.data.engineTypeId,[Validators.required]),
  });

  constructor(
    public dialogRef: MatDialogRef<CarAddComponent>,
    @Inject(MAT_DIALOG_DATA) public data: Car,
    private memberService: MembersService,
    private _carsService: CarsService) 
     {
      
     }

    onNoClick(): void {
      this.dialogRef.close();
    }
    setBodyType(value: number)
    {
      this.data.body = value;
    }
    setEngineType(value: number)
    {
      this.data.engineTypeId = value;
    }
    onSaveClick(files: any): void {
      if(this.carForm.invalid)
      {
          return;
      }
      
      this.data.mark = this.carForm.controls['mark'].value !== null ? this.carForm.controls['mark'].value : '';
      this.data.model = this.carForm.controls['model'].value !== null ? this.carForm.controls['model'].value : '';
      this.data.yearProduction = this.carForm.controls['yearProduction'].value !== null ? this.carForm.controls['yearProduction'].value : 0;
      this.data.capacity = this.carForm.controls['capacity'].value !== null ? this.carForm.controls['capacity'].value : 0 ;   
      this.dialogRef.close(this.data);

      const file:File = files[0];  

      if (file) {
  
        this.fileName = file.name;
        
        this.formData.append("thumbnail", file, this.fileName);    
    }

      if(this.data){
        if (this.data.id === 0) 
        {          
          this._carsService.add(this.data, this.formData);
        }
        else
        {
          this._carsService.update(this.data)
        }
    }
  }
}


