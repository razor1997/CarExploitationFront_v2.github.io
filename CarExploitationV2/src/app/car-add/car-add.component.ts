import { Component, Inject, Input, OnInit, Output } from '@angular/core';
import { FormControl, FormGroup, Validators } from '@angular/forms';
import { MatDialogRef, MAT_DIALOG_DATA, MatDialog} from '@angular/material/dialog';
import { Car } from 'app/_models/car';

interface Engine {
  value: number;
  type: string;
}

@Component({
  selector: 'app-car-add',
  templateUrl: './car-add.component.html',
  styleUrls: ['./car-add.component.css']
})

export class CarAddComponent {
  
  carForm = new FormGroup({
    mark: new FormControl(this.data.mark,[Validators.pattern(/\s/), Validators.required]),
    model: new FormControl(this.data.model,[Validators.required]),
    yearProduction: new FormControl(this.data.yearProduction,[Validators.required]),
    capacity: new FormControl(this.data.capacity,[Validators.required]),
    engineType: new FormControl(this.data.engineType,[Validators.required]),
  });
  constructor(
    public dialogRef: MatDialogRef<CarAddComponent>,
    @Inject(MAT_DIALOG_DATA) public data: Car) {
      
     }

    onNoClick(): void {
      this.dialogRef.close();
    }
  
    onSaveClick(): void {
      if(this.carForm.invalid)
      {
          return;
      }
      this.data.mark = this.carForm.controls['mark'].value !== null ? this.carForm.controls['mark'].value : '';
      this.data.model = this.carForm.controls['model'].value !== null ? this.carForm.controls['model'].value : '';
      this.data.yearProduction = this.carForm.controls['yearProduction'].value !== null ? this.carForm.controls['yearProduction'].value : 0;
      this.data.capacity = this.carForm.controls['capacity'].value !== null ? this.carForm.controls['capacity'].value : 0 ;
      this.data.engineType = this.carForm.controls['engineType'].value !== null ? this.carForm.controls['engineType'].value : 0;
      this.dialogRef.close(this.data);
    }
}

