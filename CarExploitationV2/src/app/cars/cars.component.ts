import { Component, OnInit } from '@angular/core';
import { Car } from 'app/_models/car';
import {NgxGalleryImageSize, NgxGalleryOptions} from '@kolkov/ngx-gallery';
import {NgxGalleryImage} from '@kolkov/ngx-gallery';
import {NgxGalleryAnimation} from '@kolkov/ngx-gallery';
import { Lightbox } from 'ngx-lightbox';
import { Observable } from 'rxjs';
import { CarsService } from 'app/_services/cars.service';
import {MatDialog, MatDialogRef } from '@angular/material/dialog';
import { CarAddComponent } from 'app/car-add/car-add.component';
import { EngineType } from 'app/_enums/cars-data';

@Component({
  selector: 'app-cars',

  templateUrl: './cars.component.html',
  styleUrls: ['./cars.component.css']
})

export class CarsComponent {
  namesOfColumns: string[] = ['image','mark', 'model', 'mileage', 'yearProduction', 'buyCost', 'engine', 'engineType','update','delete'];
  galleryOptions: NgxGalleryOptions[] | undefined;
  galleryImages: NgxGalleryImage[] | undefined;
  _album:any = [];
  cars$: Observable <Car[]>; 
  car: Car = {
    id: 0,
    mark: "",
    model: "",
    body:  0,
    capacity:  0,
    mileage:  0,
    buyCost: 0,
    yearProduction:  0,
    engineTypeId: 0  
  }
  engine?: EngineType;
  openEditDialog: boolean;
  addCarForm: any;
  ModalTitle = "";
  dialogRef: MatDialogRef<CarAddComponent>;


  constructor(private _lightbox: Lightbox, 
              private _carsService: CarsService,
              public dialog: MatDialog) {

               
    for (let i = 1; i <= 3; i++) {
      const src = 'https://res.cloudinary.com/dksxe4clc/image/upload/v1659296773/yszl9srbgghbcmnmo35a.jpg';
      const caption = 'Image ' + i + ' caption here';
      const thumb = 'https://res.cloudinary.com/dksxe4clc/image/upload/v1659296773/yszl9srbgghbcmnmo35a.jpg';
      const image = {
         src: src,
         caption: caption,
         thumb: thumb
      };
      this._album.push(image);
   }
  }
  openDialog(model: Car): void {
    this.dialogRef = this.dialog.open(CarAddComponent,  {
      width: '400px',
      data: model   
    });

  this.dialogRef.afterClosed().subscribe(result => {

  });  
  }
  ngOnInit(): void {
    this.getCarList();
  }
  getCarList(){
    this.cars$ = this._carsService.getAll();
  }
  open(index: number): void {
    // open lightbox
    this._lightbox.open(this._album, index);
  }
 
  close(): void {
    // close lightbox programmatically
    this._lightbox.close();
  }     
  closeClick() {
    this.openEditDialog = false;
    // this.getCarList();
  }
  deleteCar(id: number)
  {
    return this._carsService.delete(id)
      .subscribe(
        
      )
  }
  getTypeOfEngine(engineType: Number)
  { 
    switch(engineType)
    {
      case EngineType.Diesel :
        {
          return "Diesel";
        } break;
      case EngineType.Petrol :
        {
          return "Petrol";
        } break;
      case EngineType.LPG :
        {
          return "LPG";
        } break;
      case EngineType.Electric :
        {
          return "Electric";
        } break;
        default:
        {
          return "Other";
        }break;
    }
    return "Other";
  }
}
